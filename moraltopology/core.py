# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['MoralTopology', 'on_click_upload', 'on_submit', 'btn_upload', 'btn_submit', 'out_pl', 'data_name',
           'data_label', 'dataset']

# Cell
class MoralTopology:
    "MoralTopology class"
    def __init__(self, name, data):
        self.data = data
        self.name = name

    def username(self):
        return self.name

# Cell
from PIL import Image, ImageShow
import ipywidgets as widgets
import io

# Cell
# https://github.com/fastai/fastai1/blob/master/fastai/widgets/image_cleaner.py#L217
# wrap in class, take in a data with images, text, audio folders
btn_upload = widgets.FileUpload()
btn_submit = widgets.Button(description="Label it")
out_pl = widgets.Output()
data_name = widgets.Text(placeholder="Enter a title or name for this data")
data_label = widgets.Text(placeholder="Enter a comma seperated list of labels")
dataset = []

def on_click_upload(change):
    img = Image.open(io.BytesIO(btn_upload.data[-1]))
    out_pl.clear_output()
    with out_pl: display(img)

def on_submit(change):
    img = Image.open(io.BytesIO(btn_upload.data[-1]))
    label = data_label.value
    name = data_name.value
    data = {'data': img, 'name': name, 'label': label.split(",") }
    print(data['name'])
    print(data['label'])

btn_upload.observe(on_click_upload, names=['data'])
btn_submit.on_click(on_submit)
widgets.VBox([widgets.Label('Upload an image and add labels!'),
      btn_upload,out_pl, data_name, data_label, btn_submit])